{"version":3,"sources":["src/app/address-pages/addresses/addresses.page.html","src/app/address-pages/addresses/addresses.module.ts","src/app/address-pages/addresses/addresses.page.scss","src/app/address-pages/addresses/addresses.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,40KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCCSf;;;AAGA,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,4CAAA,CAAA,eAAA;AAFb,KADqB,CAAvB;;AAiBA,QAAa,mBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAV/B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAJO,EAKP,mDAAA,CAAA,aAAA,CALO,CADD;AAQR,MAAA,YAAY,EAAE,CAAC,4CAAA,CAAA,eAAA,CAAD;AARN,KAAT,CAU+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;AC7Bb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,s+CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBf,QAAa,aAAb;AA6BE,6BACS,OADT,EAES,MAFT,EAGS,SAHT,EAIS,MAJT,EAKS,OALT,EAMS,gBANT,EAOS,OAPT,EAQS,QART,EAQsC;AAAA;;AAAA;;AAP7B,aAAA,OAAA,GAAA,OAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,OAAA,GAAA,OAAA;AACA,aAAA,gBAAA,GAAA,gBAAA;AACA,aAAA,OAAA,GAAA,OAAA;AACA,aAAA,QAAA,GAAA,QAAA;AApCT,aAAA,OAAA,GAAU;AACR,UAAA,UAAU,EAAE,EADJ;AAER,UAAA,SAAS,EAAE,EAFH;AAGR,UAAA,OAAO,EAAE,EAHD;AAIR,UAAA,SAAS,EAAE,EAJH;AAKR,UAAA,SAAS,EAAE,EALH;AAMR,UAAA,IAAI,EAAE,EANE;AAOR,UAAA,KAAK,EAAE,EAPC;AAQR,UAAA,QAAQ,EAAE,EARF;AASR,UAAA,OAAO,EAAE,EATD;AAUR,UAAA,KAAK,EAAE,EAVC;AAWR,UAAA,KAAK,EAAE;AAXC,SAAV;AAaA,aAAA,kBAAA,GAAqB,EAArB;AACA,aAAA,gBAAA,GAAmB,EAAnB;AACA,aAAA,QAAA,GAAW;AACT,UAAA,UAAU,EAAE,EADH;AAET,UAAA,SAAS,EAAE,EAFF;AAGT,UAAA,OAAO,EAAE,EAHA;AAIT,UAAA,SAAS,EAAE,EAJF;AAKT,UAAA,SAAS,EAAE,EALF;AAMT,UAAA,IAAI,EAAE,EANG;AAOT,UAAA,KAAK,EAAE,EAPE;AAQT,UAAA,QAAQ,EAAE,EARD;AAST,UAAA,OAAO,EAAE;AATA,SAAX;AAWA,aAAA,mBAAA,GAAsB,EAAtB;AACA,aAAA,iBAAA,GAAoB,EAApB;AAYE,YAAI,aAAa,GAAG,KAAK,gBAAL,CAAsB,SAAtB,CAAgC,eAAhC,CAApB;AACA,QAAA,aAAa,CAAC,aAAd,CAA4B,GAA5B,CAAgC,aAAa,CAAC,KAAd,CAAoB,SAApB,CAA8B,UAAA,IAAI,EAAG;AAEnE,cAAI,IAAI,CAAC,IAAL,IAAa,gBAAjB,EAAmC;AACjC,YAAA,KAAI,CAAC,mBAAL,GAA2B,IAAI,CAAC,KAAL,CAAW,IAAtC;AACA,YAAA,KAAI,CAAC,QAAL,CAAc,OAAd,GAAwB,IAAI,CAAC,KAAL,CAAW,KAAnC;AACA,YAAA,KAAI,CAAC,QAAL,CAAc,KAAd,GAAsB,IAAtB;AACA,YAAA,KAAI,CAAC,QAAL,CAAc,IAAd,GAAqB,IAArB;AACA,YAAA,KAAI,CAAC,QAAL,CAAc,QAAd,GAAyB,IAAzB;AACA,YAAA,KAAI,CAAC,iBAAL,GAAyB,EAAzB;AAED;;AACD,cAAI,IAAI,CAAC,IAAL,IAAa,eAAjB,EAAkC;AAChC,YAAA,KAAI,CAAC,kBAAL,GAA0B,IAAI,CAAC,KAAL,CAAW,IAArC;AACA,YAAA,KAAI,CAAC,OAAL,CAAa,OAAb,GAAuB,IAAI,CAAC,KAAL,CAAW,KAAlC;AACA,YAAA,KAAI,CAAC,OAAL,CAAa,KAAb,GAAqB,IAArB;AACA,YAAA,KAAI,CAAC,OAAL,CAAa,IAAb,GAAoB,IAApB;AACA,YAAA,KAAI,CAAC,OAAL,CAAa,QAAb,GAAwB,IAAxB;AACA,YAAA,KAAI,CAAC,gBAAL,GAAwB,EAAxB;AACD;AACF,SAnB+B,CAAhC;AAqBA,YAAI,cAAc,GAAG,KAAK,gBAAL,CAAsB,SAAtB,CAAgC,gBAAhC,CAArB;AACA,QAAA,cAAc,CAAC,aAAf,CAA6B,GAA7B,CAAiC,cAAc,CAAC,KAAf,CAAqB,SAArB,CAA+B,UAAA,IAAI,EAAG;AACrE,cAAI,IAAI,CAAC,IAAL,IAAa,gBAAjB,EAAmC;AACjC,gBAAI,IAAI,CAAC,KAAL,IAAc,OAAlB,EAA2B;AACzB,cAAA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,KAA7B;AACA,cAAA,KAAI,CAAC,QAAL,CAAc,KAAd,GAAsB,OAAtB;AACA,cAAA,KAAI,CAAC,iBAAL,GAAyB,OAAzB;AACD,aAJD,MAMK;AACH,cAAA,KAAI,CAAC,QAAL,CAAc,KAAd,GAAsB,IAAI,CAAC,KAAL,CAAW,KAAjC;AACA,cAAA,KAAI,CAAC,iBAAL,GAAyB,IAAI,CAAC,KAAL,CAAW,IAApC;AACD;AAEF;;AACD,cAAI,IAAI,CAAC,IAAL,IAAa,eAAjB,EAAkC;AAChC,gBAAI,IAAI,CAAC,KAAL,IAAc,OAAlB,EAA2B;AACzB,cAAA,KAAI,CAAC,OAAL,CAAa,KAAb,GAAqB,OAArB;AACA,cAAA,KAAI,CAAC,gBAAL,GAAwB,OAAxB;AACD,aAHD,MAKK;AACH,cAAA,KAAI,CAAC,OAAL,CAAa,KAAb,GAAqB,IAAI,CAAC,KAAL,CAAW,KAAhC;AACA,cAAA,KAAI,CAAC,gBAAL,GAAwB,IAAI,CAAC,KAAL,CAAW,IAAnC;AACD;AACF;AACF,SAzBgC,CAAjC,EA1BoC,CAqDpC;AAED;;AA5FH;AAAA;AAAA,+CA8FsB;AAAA;;AAClB,eAAK,OAAL,CAAa,IAAb;AACA,cAAI,CAAC,GAAG;AACN,YAAA,OAAO,EAAE,KAAK;AADR,WAAR;AAGA,eAAK,MAAL,CAAY,QAAZ,CAAqB,eAAe,KAAK,MAAL,CAAY,YAAZ,CAAyB,EAA7D,EAAiE,CAAjE,EAAoE,IAApE,CAAyE,UAAC,IAAD,EAAc;AACrF,YAAA,MAAI,CAAC,OAAL,CAAa,IAAb;;AACA,gBAAI,GAAG,GAAG,IAAV;AACA,YAAA,MAAI,CAAC,MAAL,CAAY,YAAZ,CAAyB,OAAzB,GAAmC,GAAG,CAAC,OAAvC;;AACA,YAAA,MAAI,CAAC,OAAL,CAAa,GAAb,CAAiB,cAAjB,EAAiC,MAAI,CAAC,MAAL,CAAY,YAA7C;;AACA,YAAA,MAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,yBAAlB;AACD,WAND;AAOD;AA1GH;AAAA;AAAA,gDA2GuB;AAAA;;AACnB,eAAK,OAAL,CAAa,IAAb;AACA,cAAI,CAAC,GAAG;AACN,YAAA,QAAQ,EAAE,KAAK;AADT,WAAR;AAGA,eAAK,MAAL,CAAY,QAAZ,CAAqB,eAAe,KAAK,MAAL,CAAY,YAAZ,CAAyB,EAA7D,EAAiE,CAAjE,EAAoE,IAApE,CAAyE,UAAC,IAAD,EAAc;AACrF,YAAA,MAAI,CAAC,OAAL,CAAa,IAAb;;AACA,gBAAI,GAAG,GAAG,IAAV;AAEA,YAAA,MAAI,CAAC,MAAL,CAAY,YAAZ,CAAyB,QAAzB,GAAoC,GAAG,CAAC,QAAxC;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,eAAZ;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,MAAL,CAAY,YAAxB;;AACA,YAAA,MAAI,CAAC,OAAL,CAAa,GAAb,CAAiB,cAAjB,EAAiC,MAAI,CAAC,MAAL,CAAY,YAA7C;;AACA,YAAA,MAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,0BAAlB;AACD,WATD;AAUD;AA1HH;AAAA;AAAA,0CA2H0B,KA3H1B,EA2H+B;;;;;;;;AACf,2BAAM,KAAK,SAAL,CAAe,MAAf,CAAsB;AACtC,sBAAA,SAAS,EAAE,8EAAA,CAAA,mBAAA,CAD2B;AAEtC,sBAAA,cAAc,EAAE;AACd,wBAAA,IAAI,EAAE;AADQ;AAFsB,qBAAtB,CAAN;;;AAAR,oBAAA,K;;AAMG,2BAAM,KAAK,CAAC,OAAN,EAAN;;;;;;;;;;;;AACR;AAnIH;AAAA;AAAA,uCAoIuB,KApIvB,EAoI4B;;;;;;;AACpB,oBAAA,E,GAAM,KAAK,IAAI,gBAAV,GAA8B,KAAK,QAAL,CAAc,OAA5C,GAAsD,KAAK,OAAL,CAAa,O;;AAEhE,2BAAM,KAAK,SAAL,CAAe,MAAf,CAAsB;AACtC,sBAAA,SAAS,EAAE,0EAAA,CAAA,iBAAA,CAD2B;AAEtC,sBAAA,cAAc,EAAE;AACd,wBAAA,IAAI,EAAE,KADQ;AACD,wBAAA,EAAE,EAAE;AADH;AAFsB,qBAAtB,CAAN;;;AAAR,oBAAA,K;;AAMG,2BAAM,KAAK,CAAC,OAAN,EAAN;;;;;;;;;;;;AACR;AA9IH;AAAA;AAAA,2CA+IkB;AAEd,cAAI,KAAK,MAAL,CAAY,YAAZ,CAAyB,EAAzB,IAA+B,IAAnC,EAAyC;AACvC,iBAAK,QAAL,GAAgB,KAAK,MAAL,CAAY,YAAZ,CAAyB,QAAzC;AACA,iBAAK,mBAAL,GAA2B,KAAK,QAAL,CAAc,cAAd,CAA6B,KAAK,MAAL,CAAY,YAAZ,CAAyB,QAAzB,CAAkC,OAA/D,CAA3B;AACA,iBAAK,iBAAL,GAAyB,KAAK,QAAL,CAAc,YAAd,CAA2B,KAAK,MAAL,CAAY,YAAZ,CAAyB,QAAzB,CAAkC,OAA7D,EAAsE,KAAK,MAAL,CAAY,YAAZ,CAAyB,QAAzB,CAAkC,KAAxG,CAAzB;AAEA,iBAAK,OAAL,GAAe,KAAK,MAAL,CAAY,YAAZ,CAAyB,OAAxC;AACA,iBAAK,kBAAL,GAA0B,KAAK,QAAL,CAAc,cAAd,CAA6B,KAAK,MAAL,CAAY,YAAZ,CAAyB,OAAzB,CAAiC,OAA9D,CAA1B;AACA,iBAAK,gBAAL,GAAwB,KAAK,QAAL,CAAc,YAAd,CAA2B,KAAK,MAAL,CAAY,YAAZ,CAAyB,OAAzB,CAAiC,OAA5D,EAAqE,KAAK,MAAL,CAAY,YAAZ,CAAyB,OAAzB,CAAiC,KAAtG,CAAxB;AACD;AACF;AA1JH;AAAA;AAAA,mCA2JU,CAEP;AA7JH;;AAAA;AAAA,OAAA;;;;cA8BoB,2CAAA,CAAA,eAAA;;cACD,0EAAA,CAAA,mBAAA;;cACG,2CAAA,CAAA,iBAAA;;cACH,gEAAA,CAAA,eAAA;;cACC,2CAAA,CAAA,SAAA;;cACS,yEAAA,CAAA,kBAAA;;cACT,kEAAA,CAAA,gBAAA;;cACC,8EAAA,CAAA,qBAAA;;;;AArCR,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALzB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,eADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,mGAAA,CAAA,YAFS;;;;AAAA,KAAV,CAKyB,E,uEA8BN,2CAAA,CAAA,eAAA,C,EACD,0EAAA,CAAA,mBAAA,C,EACG,2CAAA,CAAA,iBAAA,C,EACH,gEAAA,CAAA,eAAA,C,EACC,2CAAA,CAAA,SAAA,C,EACS,yEAAA,CAAA,kBAAA,C,EACT,kEAAA,CAAA,gBAAA,C,EACC,8EAAA,CAAA,qBAAA,C,EArCK,CAAA,EAAb,aAAa,CAAb","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-menu-button slot=\\\"start\\\" *ngIf=\\\"!config.appNavigationTabs\\\">\\n      <ion-icon name=\\\"menu\\\"></ion-icon>\\n    </ion-menu-button>\\n    <ion-title> {{'Address'| translate }} </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button fill=\\\"clear\\\" routerLink=\\\"/cart\\\" routerDirection=\\\"forward\\\">\\n        <ion-icon name=\\\"basket\\\"></ion-icon>\\n        <ion-badge>{{shared.cartTotalItems()}}</ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <!-- For Shipping Address -->\\n  <p>\\n    {{'Shipping Address'| translate }}\\n  </p>\\n\\n  <form #shippingForm=\\\"ngForm\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'First Name'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_firstname\\\" [(ngModel)]=\\\"shipping.first_name\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Last Name'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_lastname\\\" [(ngModel)]=\\\"shipping.last_name\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Compnay'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"company\\\" [(ngModel)]=\\\"shipping.company\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Address'|translate}} 1</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"address\\\" [(ngModel)]=\\\"shipping.address_1\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Address'|translate}} 2</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"address2\\\" [(ngModel)]=\\\"shipping.address_2\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Country'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_country\\\" tappable (click)=\\\"selectCountryPage('shippingUpdate')\\\" readonly\\n        [(ngModel)]=\\\"shippingCountryName\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'State'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" required name=\\\"shipping_zone\\\" tappable (click)=\\\"selectZonePage('shippingUpdate')\\\" readonly\\n        [(ngModel)]=\\\"shippingStateName\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'City'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_city\\\" [(ngModel)]=\\\"shipping.city\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Post code'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_postcode\\\" [(ngModel)]=\\\"shipping.postcode\\\" required></ion-input>\\n    </ion-item>\\n  </form>\\n  <ion-button expand=\\\"full\\\" color=\\\"secondary\\\" (click)=\\\"updateShippingAddress()\\\" [disabled]=\\\"!shippingForm.form.valid\\\">\\n    {{'Update Shipping'|translate}}\\n  </ion-button>\\n\\n  <!-- For Billing Address -->\\n  <p>\\n    {{'Billing Address'| translate }}\\n  </p>\\n\\n  <form #billingForm=\\\"ngForm\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'First Name'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billing_firstname\\\" [(ngModel)]=\\\"billing.first_name\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Last Name'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billing_lastname\\\" [(ngModel)]=\\\"billing.last_name\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Compnay'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billingcompany\\\" [(ngModel)]=\\\"billing.company\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Address'|translate}} 1</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billingaddress\\\" [(ngModel)]=\\\"billing.address_1\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Address'|translate}} 2</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billingaddress2\\\" [(ngModel)]=\\\"billing.address_2\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Country'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billing_country\\\" tappable (click)=\\\"selectCountryPage('billingUpdate')\\\" readonly\\n        [(ngModel)]=\\\"billingCountryName\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'State'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" required name=\\\"billing_zone\\\" tappable (click)=\\\"selectZonePage('billingUpdate')\\\" readonly\\n        [(ngModel)]=\\\"billingStateName\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'City'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billing_city\\\" [(ngModel)]=\\\"billing.city\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Post code'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billing_postcode\\\" [(ngModel)]=\\\"billing.postcode\\\" required></ion-input>\\n    </ion-item>\\n  </form>\\n  <ion-button expand=\\\"full\\\" color=\\\"secondary\\\" (click)=\\\"updateBillingAddress()\\\" [disabled]=\\\"!billingForm.form.valid\\\">\\n    {{'Update Billing'|translate}}\\n  </ion-button>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddressesPage } from './addresses.page';\n\n// For Translation Language\nimport { PipesModule } from 'src/pipes/pipes.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddressesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    PipesModule\n  ],\n  declarations: [AddressesPage]\n})\nexport class AddressesPageModule { }\n","export default \"ion-content p {\\n  font-size: 20px;\\n  text-align: center;\\n}\\nion-content form ion-item {\\n  --background: var(--ion-background-color);\\n}\\nion-content form ion-item ion-label {\\n  color: rgba(var(--ion-text-color-rgb), 0.5);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRGVza3RvcC9FVkVSWURBWS1GQVJNUy9ldmVyZGF5X25ldy9zcmMvYXBwL2FkZHJlc3MtcGFnZXMvYWRkcmVzc2VzL2FkZHJlc3Nlcy5wYWdlLnNjc3MiLCJzcmMvYXBwL2FkZHJlc3MtcGFnZXMvYWRkcmVzc2VzL2FkZHJlc3Nlcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7QUNBUjtBREdRO0VBQ0kseUNBQUE7QUNEWjtBREVZO0VBQ0ksMkNBQUE7QUNBaEIiLCJmaWxlIjoic3JjL2FwcC9hZGRyZXNzLXBhZ2VzL2FkZHJlc3Nlcy9hZGRyZXNzZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xyXG4gICAgcCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICAgIGZvcm0ge1xyXG4gICAgICAgIGlvbi1pdGVtIHtcclxuICAgICAgICAgICAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tYmFja2dyb3VuZC1jb2xvcik7XHJcbiAgICAgICAgICAgIGlvbi1sYWJlbCB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSh2YXIoLS1pb24tdGV4dC1jb2xvci1yZ2IpLCAwLjUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsImlvbi1jb250ZW50IHAge1xuICBmb250LXNpemU6IDIwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbmlvbi1jb250ZW50IGZvcm0gaW9uLWl0ZW0ge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yKTtcbn1cbmlvbi1jb250ZW50IGZvcm0gaW9uLWl0ZW0gaW9uLWxhYmVsIHtcbiAgY29sb3I6IHJnYmEodmFyKC0taW9uLXRleHQtY29sb3ItcmdiKSwgMC41KTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { ConfigService } from 'src/providers/config/config.service';\nimport { SharedDataService } from 'src/providers/shared-data/shared-data.service';\nimport { ModalController, NavController } from '@ionic/angular';\nimport { LoadingService } from 'src/providers/loading/loading.service';\nimport { LocationDataService } from 'src/providers/location-data/location-data.service';\nimport { SelectCountryPage } from 'src/app/modals/select-country/select-country.page';\nimport { SelectZonesPage } from 'src/app/modals/select-zones/select-zones.page';\nimport { AppEventsService } from 'src/providers/app-events/app-events.service';\n\n@Component({\n  selector: 'app-addresses',\n  templateUrl: './addresses.page.html',\n  styleUrls: ['./addresses.page.scss'],\n})\nexport class AddressesPage implements OnInit {\n  billing = {\n    first_name: '',\n    last_name: '',\n    company: '',\n    address_1: '',\n    address_2: '',\n    city: '',\n    state: '',\n    postcode: '',\n    country: '',\n    email: '',\n    phone: ''\n  };\n  billingCountryName = \"\";\n  billingStateName = \"\";\n  shipping = {\n    first_name: '',\n    last_name: '',\n    company: '',\n    address_1: '',\n    address_2: '',\n    city: '',\n    state: '',\n    postcode: '',\n    country: ''\n  };\n  shippingCountryName = \"\";\n  shippingStateName = \"\";\n  constructor(\n    public navCtrl: NavController,\n    public shared: SharedDataService,\n    public modalCtrl: ModalController,\n    public config: ConfigService,\n    public storage: Storage,\n    public appEventsService: AppEventsService,\n    public loading: LoadingService,\n    public location: LocationDataService) {\n\n\n    let countryChange = this.appEventsService.subscribe(\"countryChange\");\n    countryChange.subscriptions.add(countryChange.event.subscribe(data => {\n\n      if (data.page == \"shippingUpdate\") {\n        this.shippingCountryName = data.value.name;\n        this.shipping.country = data.value.value;\n        this.shipping.state = null;\n        this.shipping.city = null;\n        this.shipping.postcode = null;\n        this.shippingStateName = \"\";\n\n      }\n      if (data.page == \"billingUpdate\") {\n        this.billingCountryName = data.value.name;\n        this.billing.country = data.value.value;\n        this.billing.state = null;\n        this.billing.city = null;\n        this.billing.postcode = null;\n        this.billingStateName = \"\";\n      }\n    }));\n\n    let updateSideMenu = this.appEventsService.subscribe(\"updateSideMenu\");\n    updateSideMenu.subscriptions.add(updateSideMenu.event.subscribe(data => {\n      if (data.page == \"shippingUpdate\") {\n        if (data.value == 'other') {\n          console.log(data.page + data.value);\n          this.shipping.state = 'other';\n          this.shippingStateName = \"other\";\n        }\n\n        else {\n          this.shipping.state = data.value.value;\n          this.shippingStateName = data.value.name\n        }\n\n      }\n      if (data.page == \"billingUpdate\") {\n        if (data.value == 'other') {\n          this.billing.state = 'other';\n          this.billingStateName = \"other\";\n        }\n\n        else {\n          this.billing.state = data.value.value;\n          this.billingStateName = data.value.name;\n        }\n      }\n    }));\n\n    //state is selected\n\n  }\n\n  updateBillingAddress() {\n    this.loading.show();\n    var d = {\n      billing: this.billing\n    };\n    this.config.putAsync(\"customers/\" + this.shared.customerData.id, d).then((data: any) => {\n      this.loading.hide();\n      let dat = data\n      this.shared.customerData.billing = dat.billing;\n      this.storage.set('customerData', this.shared.customerData);\n      this.shared.toast(\"Billing Address Updated\");\n    });\n  }\n  updateShippingAddress() {\n    this.loading.show();\n    var d = {\n      shipping: this.shipping\n    };\n    this.config.putAsync(\"customers/\" + this.shared.customerData.id, d).then((data: any) => {\n      this.loading.hide();\n      let dat = data\n\n      this.shared.customerData.shipping = dat.shipping;\n      console.log(\"customer data\");\n      console.log(this.shared.customerData);\n      this.storage.set('customerData', this.shared.customerData);\n      this.shared.toast(\"Shipping Address Updated\");\n    });\n  }\n  async selectCountryPage(value) {\n    let modal = await this.modalCtrl.create({\n      component: SelectCountryPage,\n      componentProps: {\n        page: value\n      }\n    });\n    return await modal.present();\n  }\n  async selectZonePage(value) {\n    let id = (value == \"shippingUpdate\") ? this.shipping.country : this.billing.country;\n\n    let modal = await this.modalCtrl.create({\n      component: SelectZonesPage,\n      componentProps: {\n        page: value, id: id\n      }\n    });\n    return await modal.present();\n  }\n  ionViewWillEnter() {\n\n    if (this.shared.customerData.id != null) {\n      this.shipping = this.shared.customerData.shipping;\n      this.shippingCountryName = this.location.getCountryName(this.shared.customerData.shipping.country);\n      this.shippingStateName = this.location.getStateName(this.shared.customerData.shipping.country, this.shared.customerData.shipping.state);\n\n      this.billing = this.shared.customerData.billing;\n      this.billingCountryName = this.location.getCountryName(this.shared.customerData.billing.country);\n      this.billingStateName = this.location.getStateName(this.shared.customerData.billing.country, this.shared.customerData.billing.state);\n    }\n  }\n  ngOnInit() {\n\n  }\n}\n"],"sourceRoot":"webpack:///","file":"address-pages-addresses-addresses-module-es5.js"}